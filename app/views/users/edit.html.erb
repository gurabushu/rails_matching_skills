<div class="container">
  <div class="form-container">
    <div class="form-header">
      <%= link_to user_path(@user), class: "back-btn" do %>
        ← プロフィールに戻る
      <% end %>
      <h1>プロフィール編集</h1>
    </div>

    <%= form_with model: @user, local: true, class: "user-form", multipart: true do |form| %>
      <% if @user.errors.any? %>
        <div class="error-messages">
          <h4><%= pluralize(@user.errors.count, "error") %> prohibited this user from being saved:</h4>
          <ul>
            <% @user.errors.full_messages.each do |message| %>
              <li><%= message %></li>
            <% end %>
          </ul>
        </div>
      <% end %>

      <div class="form-group">
        <%= form.label :name, "名前", class: "form-label" %>
        <%= form.text_field :name, class: "form-control", placeholder: "あなたの名前を入力してください" %>
      </div>

      <div class="form-group">
        <%= form.label :avatar_image, "プロフィール画像", class: "form-label" %>
        <div class="avatar-upload-container">
          <div class="current-avatar">
            <img src="<%= @user.avatar_url(:thumb) %>" alt="現在のアバター" class="avatar-preview">
            <small class="form-help">現在の画像</small>
          </div>
          <div class="upload-field">
            <%= form.file_field :avatar_image, class: "form-control", accept: "image/*", 
                               id: "avatar_image_input" %>
            <small class="form-help">JPG、PNG、GIF形式の画像ファイルをアップロードしてください。未設定の場合はデフォルト画像が表示されます。</small>
          </div>
        </div>
      </div>

      <div class="form-group">
        <%= form.label :skill, "スキル", class: "form-label" %>
        <%= form.text_field :skill, class: "form-control", placeholder: "例: Ruby on Rails, JavaScript, デザイン" %>
        <small class="form-help">あなたの得意なスキルや専門分野を入力してください</small>
      </div>

      <div class="form-group">
        <%= form.label :description, "自己紹介", class: "form-label" %>
        <%= form.text_area :description, rows: 6, class: "form-control", 
                          placeholder: "あなたの経験や得意なこと、興味のある分野などを自由に書いてください" %>
        <small class="form-help">最大300文字まで入力できます</small>
      </div>

      <div class="form-group">
        <%= form.label :hobbies, "趣味・興味", class: "form-label" %>
        <%= form.text_area :hobbies, rows: 3, class: "form-control", 
                          placeholder: "例：読書、映画鑑賞、ハイキング、料理、ゲーム開発、音楽など" %>
        <small class="form-help">あなたの趣味や興味のあることを入力してください（最大200文字）</small>
      </div>

      <div class="form-group">
        <%= form.label :github, "GitHub URL", class: "form-label" %>
        <%= form.text_field :github, class: "form-control", 
                          placeholder: "https://github.com/username" %>
        <small class="form-help">GitHubプロフィールのURLを入力してください（任意）</small>
      </div>

      <div class="form-actions">
        <%= form.submit "プロフィールを更新", class: "btn btn-primary" %>
        <%= link_to "キャンセル", user_path(@user), class: "btn btn-outline" %>
      </div>
    <% end %>
  </div>
</div>

<style>
.form-container {
  max-width: 600px;
  margin: 0 auto;
  background: white;
  border-radius: 8px;
  box-shadow: 0 4px 6px rgba(0,0,0,0.1);
  overflow: hidden;
}

.form-header {
  background: #f8f9fa;
  padding: 24px;
  border-bottom: 1px solid #e1e5e9;
}

.avatar-upload-container {
  display: flex;
  align-items: flex-start;
  gap: 16px;
  margin-bottom: 8px;
}

.current-avatar {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 4px;
}

.avatar-preview {
  width: 60px;
  height: 60px;
  border-radius: 50%;
  object-fit: cover;
  border: 2px solid #e1e5e9;
}

.upload-field {
  flex: 1;
}

.upload-field .form-control[type="file"] {
  padding: 8px;
  border: 2px dashed #ddd;
  border-radius: 8px;
  background-color: #f9f9f9;
  cursor: pointer;
  transition: all 0.3s ease;
}

.upload-field .form-control[type="file"]:hover {
  border-color: #4a90e2;
  background-color: #f0f7ff;
}

.back-btn {
  display: inline-block;
  color: #4a90e2;
  text-decoration: none;
  margin-bottom: 16px;
  font-size: 14px;
}

.back-btn:hover {
  opacity: 0.8;
}

.form-header h1 {
  margin: 0;
  color: #333;
  font-size: 24px;
}

.user-form {
  padding: 24px;
}

.error-messages {
  background: #f8d7da;
  border: 1px solid #f5c6cb;
  border-radius: 6px;
  padding: 16px;
  margin-bottom: 24px;
}

.error-messages h4 {
  color: #721c24;
  margin: 0 0 8px 0;
  font-size: 16px;
}

.error-messages ul {
  margin: 0;
  padding-left: 20px;
}

.error-messages li {
  color: #721c24;
  margin-bottom: 4px;
}

.form-group {
  margin-bottom: 20px;
}

.form-label {
  display: block;
  margin-bottom: 6px;
  font-weight: 600;
  color: #333;
  font-size: 14px;
}

.form-control {
  width: 100%;
  padding: 12px;
  border: 1px solid #ddd;
  border-radius: 6px;
  font-size: 14px;
  transition: border-color 0.2s;
}

.form-control:focus {
  outline: none;
  border-color: #4a90e2;
  box-shadow: 0 0 0 2px rgba(74, 144, 226, 0.2);
}

textarea.form-control {
  resize: vertical;
  min-height: 120px;
}

.form-help {
  display: block;
  margin-top: 4px;
  font-size: 12px;
  color: #666;
}

.form-actions {
  display: flex;
  gap: 12px;
  padding-top: 24px;
  border-top: 1px solid #e1e5e9;
}

.btn {
  padding: 12px 24px;
  border: none;
  border-radius: 6px;
  font-size: 14px;
  font-weight: 600;
  cursor: pointer;
  text-decoration: none;
  display: inline-block;
  text-align: center;
  transition: all 0.2s;
}

.btn-primary {
  background: #4a90e2;
  color: white;
  flex: 1;
}

.btn-primary:hover {
  background: #357abd;
}

.btn-outline {
  background: white;
  color: #666;
  border: 1px solid #ddd;
}

.btn-outline:hover {
  background: #f8f9fa;
  border-color: #4a90e2;
  color: #4a90e2;
}

@media (max-width: 768px) {
  .form-container {
    margin: 0;
    border-radius: 0;
  }
  
  .form-actions {
    flex-direction: column;
  }
}
</style>

<script>
document.addEventListener('DOMContentLoaded', function() {
  const avatarInput = document.getElementById('avatar_image_input');
  const avatarPreview = document.querySelector('.avatar-preview');
  
  if (avatarInput && avatarPreview) {
    avatarInput.addEventListener('change', function(event) {
      const file = event.target.files[0];
      
      if (file) {
        // ファイルサイズチェック（5MB制限）
        if (file.size > 5 * 1024 * 1024) {
          alert('ファイルサイズは5MB以下にしてください');
          event.target.value = '';
          return;
        }
        
        // ファイルタイプチェック
        if (!file.type.match(/^image\/(jpeg|png|gif)$/)) {
          alert('JPEG、PNG、GIF形式のファイルのみアップロード可能です');
          event.target.value = '';
          return;
        }
        
        // プレビュー表示
        const reader = new FileReader();
        reader.onload = function(e) {
          avatarPreview.src = e.target.result;
        };
        reader.readAsDataURL(file);
      }
    });
  }
});
</script>
